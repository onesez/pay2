<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="entity.query.mybatis.map.OrderlistMapper" >
  <resultMap id="BaseResultMap" type="entity.query.entites.Orderlist" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="creat_time" property="creatTime" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="md5key" property="md5key" jdbcType="VARCHAR" />
    <result column="rote_id" property="roteId" jdbcType="VARCHAR" />
    <result column="pay_platform" property="payPlatform" jdbcType="VARCHAR" />
    <result column="product_sid" property="productSid" jdbcType="SMALLINT" />
    <result column="pay_date" property="payDate" jdbcType="INTEGER" />
    <result column="pay_order_id" property="payOrderId" jdbcType="VARCHAR" />
    <result column="pay_product_name" property="payProductName" jdbcType="VARCHAR" />
    <result column="pay_amount" property="payAmount" jdbcType="DECIMAL" />
    <result column="pay_notify_url" property="payNotifyUrl" jdbcType="VARCHAR" />
    <result column="pay_return_url" property="payReturnUrl" jdbcType="VARCHAR" />
    <result column="pay_remark" property="payRemark" jdbcType="VARCHAR" />
    <result column="pay_str" property="payStr" jdbcType="VARCHAR" />
    <result column="order_num" property="orderNum" jdbcType="VARCHAR" />
    <result column="success_pay_time" property="successPayTime" jdbcType="INTEGER" />
    <result column="pay_total" property="payTotal" jdbcType="DECIMAL" />
    <result column="pay_platform_name" property="payPlatformName" jdbcType="VARCHAR" />
    <result column="pay_product" property="payProduct" jdbcType="VARCHAR" />
    <result column="pay_platform_rote" property="payPlatformRote" jdbcType="DECIMAL" />
    <result column="pay_company_rote" property="payCompanyRote" jdbcType="DECIMAL" />
    <result column="pay_sell_rote" property="paySellRote" jdbcType="DECIMAL" />
    <result column="pay_platform_fee" property="payPlatformFee" jdbcType="DECIMAL" />
    <result column="pay_company_fee" property="payCompanyFee" jdbcType="DECIMAL" />
    <result column="pay_sell_fee" property="paySellFee" jdbcType="DECIMAL" />
    <result column="pay_to_member" property="payToMember" jdbcType="DECIMAL" />
    <result column="pay_to_boss" property="payToBoss" jdbcType="DECIMAL" />
    <result column="profit" property="profit" jdbcType="DECIMAL" />
    <result column="pre_pay_time" property="prePayTime" jdbcType="INTEGER" />
    <result column="pay_time" property="payTime" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="pay_state" property="payState" jdbcType="SMALLINT" />
    <result column="pay_user" property="payUser" jdbcType="VARCHAR" />
    <result column="pay_user_commission" property="payUserCommission" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, creat_time, user_id, md5key, rote_id, pay_platform, product_sid, pay_date, pay_order_id, 
    pay_product_name, pay_amount, pay_notify_url, pay_return_url, pay_remark, pay_str, 
    order_num, success_pay_time, pay_total, pay_platform_name, pay_product, pay_platform_rote, 
    pay_company_rote, pay_sell_rote, pay_platform_fee, pay_company_fee, pay_sell_fee, 
    pay_to_member, pay_to_boss, profit, pre_pay_time, pay_time, status, pay_state, pay_user, 
    pay_user_commission
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="entity.query.entites.OrderlistExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from orderlist
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from orderlist
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from orderlist
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="entity.query.entites.OrderlistExample" >
    delete from orderlist
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="entity.query.entites.Orderlist" >
    insert into orderlist (id, creat_time, user_id, 
      md5key, rote_id, pay_platform, 
      product_sid, pay_date, pay_order_id, 
      pay_product_name, pay_amount, pay_notify_url, 
      pay_return_url, pay_remark, pay_str, 
      order_num, success_pay_time, pay_total, 
      pay_platform_name, pay_product, pay_platform_rote, 
      pay_company_rote, pay_sell_rote, pay_platform_fee, 
      pay_company_fee, pay_sell_fee, pay_to_member, 
      pay_to_boss, profit, pre_pay_time, 
      pay_time, status, pay_state, 
      pay_user, pay_user_commission)
    values (#{id,jdbcType=INTEGER}, #{creatTime,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, 
      #{md5key,jdbcType=VARCHAR}, #{roteId,jdbcType=VARCHAR}, #{payPlatform,jdbcType=VARCHAR}, 
      #{productSid,jdbcType=SMALLINT}, #{payDate,jdbcType=INTEGER}, #{payOrderId,jdbcType=VARCHAR}, 
      #{payProductName,jdbcType=VARCHAR}, #{payAmount,jdbcType=DECIMAL}, #{payNotifyUrl,jdbcType=VARCHAR}, 
      #{payReturnUrl,jdbcType=VARCHAR}, #{payRemark,jdbcType=VARCHAR}, #{payStr,jdbcType=VARCHAR}, 
      #{orderNum,jdbcType=VARCHAR}, #{successPayTime,jdbcType=INTEGER}, #{payTotal,jdbcType=DECIMAL}, 
      #{payPlatformName,jdbcType=VARCHAR}, #{payProduct,jdbcType=VARCHAR}, #{payPlatformRote,jdbcType=DECIMAL}, 
      #{payCompanyRote,jdbcType=DECIMAL}, #{paySellRote,jdbcType=DECIMAL}, #{payPlatformFee,jdbcType=DECIMAL}, 
      #{payCompanyFee,jdbcType=DECIMAL}, #{paySellFee,jdbcType=DECIMAL}, #{payToMember,jdbcType=DECIMAL}, 
      #{payToBoss,jdbcType=DECIMAL}, #{profit,jdbcType=DECIMAL}, #{prePayTime,jdbcType=INTEGER}, 
      #{payTime,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{payState,jdbcType=SMALLINT}, 
      #{payUser,jdbcType=VARCHAR}, #{payUserCommission,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="entity.query.entites.Orderlist" >
    insert into orderlist
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="creatTime != null" >
        creat_time,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="md5key != null" >
        md5key,
      </if>
      <if test="roteId != null" >
        rote_id,
      </if>
      <if test="payPlatform != null" >
        pay_platform,
      </if>
      <if test="productSid != null" >
        product_sid,
      </if>
      <if test="payDate != null" >
        pay_date,
      </if>
      <if test="payOrderId != null" >
        pay_order_id,
      </if>
      <if test="payProductName != null" >
        pay_product_name,
      </if>
      <if test="payAmount != null" >
        pay_amount,
      </if>
      <if test="payNotifyUrl != null" >
        pay_notify_url,
      </if>
      <if test="payReturnUrl != null" >
        pay_return_url,
      </if>
      <if test="payRemark != null" >
        pay_remark,
      </if>
      <if test="payStr != null" >
        pay_str,
      </if>
      <if test="orderNum != null" >
        order_num,
      </if>
      <if test="successPayTime != null" >
        success_pay_time,
      </if>
      <if test="payTotal != null" >
        pay_total,
      </if>
      <if test="payPlatformName != null" >
        pay_platform_name,
      </if>
      <if test="payProduct != null" >
        pay_product,
      </if>
      <if test="payPlatformRote != null" >
        pay_platform_rote,
      </if>
      <if test="payCompanyRote != null" >
        pay_company_rote,
      </if>
      <if test="paySellRote != null" >
        pay_sell_rote,
      </if>
      <if test="payPlatformFee != null" >
        pay_platform_fee,
      </if>
      <if test="payCompanyFee != null" >
        pay_company_fee,
      </if>
      <if test="paySellFee != null" >
        pay_sell_fee,
      </if>
      <if test="payToMember != null" >
        pay_to_member,
      </if>
      <if test="payToBoss != null" >
        pay_to_boss,
      </if>
      <if test="profit != null" >
        profit,
      </if>
      <if test="prePayTime != null" >
        pre_pay_time,
      </if>
      <if test="payTime != null" >
        pay_time,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="payState != null" >
        pay_state,
      </if>
      <if test="payUser != null" >
        pay_user,
      </if>
      <if test="payUserCommission != null" >
        pay_user_commission,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="creatTime != null" >
        #{creatTime,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="md5key != null" >
        #{md5key,jdbcType=VARCHAR},
      </if>
      <if test="roteId != null" >
        #{roteId,jdbcType=VARCHAR},
      </if>
      <if test="payPlatform != null" >
        #{payPlatform,jdbcType=VARCHAR},
      </if>
      <if test="productSid != null" >
        #{productSid,jdbcType=SMALLINT},
      </if>
      <if test="payDate != null" >
        #{payDate,jdbcType=INTEGER},
      </if>
      <if test="payOrderId != null" >
        #{payOrderId,jdbcType=VARCHAR},
      </if>
      <if test="payProductName != null" >
        #{payProductName,jdbcType=VARCHAR},
      </if>
      <if test="payAmount != null" >
        #{payAmount,jdbcType=DECIMAL},
      </if>
      <if test="payNotifyUrl != null" >
        #{payNotifyUrl,jdbcType=VARCHAR},
      </if>
      <if test="payReturnUrl != null" >
        #{payReturnUrl,jdbcType=VARCHAR},
      </if>
      <if test="payRemark != null" >
        #{payRemark,jdbcType=VARCHAR},
      </if>
      <if test="payStr != null" >
        #{payStr,jdbcType=VARCHAR},
      </if>
      <if test="orderNum != null" >
        #{orderNum,jdbcType=VARCHAR},
      </if>
      <if test="successPayTime != null" >
        #{successPayTime,jdbcType=INTEGER},
      </if>
      <if test="payTotal != null" >
        #{payTotal,jdbcType=DECIMAL},
      </if>
      <if test="payPlatformName != null" >
        #{payPlatformName,jdbcType=VARCHAR},
      </if>
      <if test="payProduct != null" >
        #{payProduct,jdbcType=VARCHAR},
      </if>
      <if test="payPlatformRote != null" >
        #{payPlatformRote,jdbcType=DECIMAL},
      </if>
      <if test="payCompanyRote != null" >
        #{payCompanyRote,jdbcType=DECIMAL},
      </if>
      <if test="paySellRote != null" >
        #{paySellRote,jdbcType=DECIMAL},
      </if>
      <if test="payPlatformFee != null" >
        #{payPlatformFee,jdbcType=DECIMAL},
      </if>
      <if test="payCompanyFee != null" >
        #{payCompanyFee,jdbcType=DECIMAL},
      </if>
      <if test="paySellFee != null" >
        #{paySellFee,jdbcType=DECIMAL},
      </if>
      <if test="payToMember != null" >
        #{payToMember,jdbcType=DECIMAL},
      </if>
      <if test="payToBoss != null" >
        #{payToBoss,jdbcType=DECIMAL},
      </if>
      <if test="profit != null" >
        #{profit,jdbcType=DECIMAL},
      </if>
      <if test="prePayTime != null" >
        #{prePayTime,jdbcType=INTEGER},
      </if>
      <if test="payTime != null" >
        #{payTime,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="payState != null" >
        #{payState,jdbcType=SMALLINT},
      </if>
      <if test="payUser != null" >
        #{payUser,jdbcType=VARCHAR},
      </if>
      <if test="payUserCommission != null" >
        #{payUserCommission,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="entity.query.entites.OrderlistExample" resultType="java.lang.Integer" >
    select count(*) from orderlist
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update orderlist
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.creatTime != null" >
        creat_time = #{record.creatTime,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.md5key != null" >
        md5key = #{record.md5key,jdbcType=VARCHAR},
      </if>
      <if test="record.roteId != null" >
        rote_id = #{record.roteId,jdbcType=VARCHAR},
      </if>
      <if test="record.payPlatform != null" >
        pay_platform = #{record.payPlatform,jdbcType=VARCHAR},
      </if>
      <if test="record.productSid != null" >
        product_sid = #{record.productSid,jdbcType=SMALLINT},
      </if>
      <if test="record.payDate != null" >
        pay_date = #{record.payDate,jdbcType=INTEGER},
      </if>
      <if test="record.payOrderId != null" >
        pay_order_id = #{record.payOrderId,jdbcType=VARCHAR},
      </if>
      <if test="record.payProductName != null" >
        pay_product_name = #{record.payProductName,jdbcType=VARCHAR},
      </if>
      <if test="record.payAmount != null" >
        pay_amount = #{record.payAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.payNotifyUrl != null" >
        pay_notify_url = #{record.payNotifyUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.payReturnUrl != null" >
        pay_return_url = #{record.payReturnUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.payRemark != null" >
        pay_remark = #{record.payRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.payStr != null" >
        pay_str = #{record.payStr,jdbcType=VARCHAR},
      </if>
      <if test="record.orderNum != null" >
        order_num = #{record.orderNum,jdbcType=VARCHAR},
      </if>
      <if test="record.successPayTime != null" >
        success_pay_time = #{record.successPayTime,jdbcType=INTEGER},
      </if>
      <if test="record.payTotal != null" >
        pay_total = #{record.payTotal,jdbcType=DECIMAL},
      </if>
      <if test="record.payPlatformName != null" >
        pay_platform_name = #{record.payPlatformName,jdbcType=VARCHAR},
      </if>
      <if test="record.payProduct != null" >
        pay_product = #{record.payProduct,jdbcType=VARCHAR},
      </if>
      <if test="record.payPlatformRote != null" >
        pay_platform_rote = #{record.payPlatformRote,jdbcType=DECIMAL},
      </if>
      <if test="record.payCompanyRote != null" >
        pay_company_rote = #{record.payCompanyRote,jdbcType=DECIMAL},
      </if>
      <if test="record.paySellRote != null" >
        pay_sell_rote = #{record.paySellRote,jdbcType=DECIMAL},
      </if>
      <if test="record.payPlatformFee != null" >
        pay_platform_fee = #{record.payPlatformFee,jdbcType=DECIMAL},
      </if>
      <if test="record.payCompanyFee != null" >
        pay_company_fee = #{record.payCompanyFee,jdbcType=DECIMAL},
      </if>
      <if test="record.paySellFee != null" >
        pay_sell_fee = #{record.paySellFee,jdbcType=DECIMAL},
      </if>
      <if test="record.payToMember != null" >
        pay_to_member = #{record.payToMember,jdbcType=DECIMAL},
      </if>
      <if test="record.payToBoss != null" >
        pay_to_boss = #{record.payToBoss,jdbcType=DECIMAL},
      </if>
      <if test="record.profit != null" >
        profit = #{record.profit,jdbcType=DECIMAL},
      </if>
      <if test="record.prePayTime != null" >
        pre_pay_time = #{record.prePayTime,jdbcType=INTEGER},
      </if>
      <if test="record.payTime != null" >
        pay_time = #{record.payTime,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.payState != null" >
        pay_state = #{record.payState,jdbcType=SMALLINT},
      </if>
      <if test="record.payUser != null" >
        pay_user = #{record.payUser,jdbcType=VARCHAR},
      </if>
      <if test="record.payUserCommission != null" >
        pay_user_commission = #{record.payUserCommission,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update orderlist
    set id = #{record.id,jdbcType=INTEGER},
      creat_time = #{record.creatTime,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=VARCHAR},
      md5key = #{record.md5key,jdbcType=VARCHAR},
      rote_id = #{record.roteId,jdbcType=VARCHAR},
      pay_platform = #{record.payPlatform,jdbcType=VARCHAR},
      product_sid = #{record.productSid,jdbcType=SMALLINT},
      pay_date = #{record.payDate,jdbcType=INTEGER},
      pay_order_id = #{record.payOrderId,jdbcType=VARCHAR},
      pay_product_name = #{record.payProductName,jdbcType=VARCHAR},
      pay_amount = #{record.payAmount,jdbcType=DECIMAL},
      pay_notify_url = #{record.payNotifyUrl,jdbcType=VARCHAR},
      pay_return_url = #{record.payReturnUrl,jdbcType=VARCHAR},
      pay_remark = #{record.payRemark,jdbcType=VARCHAR},
      pay_str = #{record.payStr,jdbcType=VARCHAR},
      order_num = #{record.orderNum,jdbcType=VARCHAR},
      success_pay_time = #{record.successPayTime,jdbcType=INTEGER},
      pay_total = #{record.payTotal,jdbcType=DECIMAL},
      pay_platform_name = #{record.payPlatformName,jdbcType=VARCHAR},
      pay_product = #{record.payProduct,jdbcType=VARCHAR},
      pay_platform_rote = #{record.payPlatformRote,jdbcType=DECIMAL},
      pay_company_rote = #{record.payCompanyRote,jdbcType=DECIMAL},
      pay_sell_rote = #{record.paySellRote,jdbcType=DECIMAL},
      pay_platform_fee = #{record.payPlatformFee,jdbcType=DECIMAL},
      pay_company_fee = #{record.payCompanyFee,jdbcType=DECIMAL},
      pay_sell_fee = #{record.paySellFee,jdbcType=DECIMAL},
      pay_to_member = #{record.payToMember,jdbcType=DECIMAL},
      pay_to_boss = #{record.payToBoss,jdbcType=DECIMAL},
      profit = #{record.profit,jdbcType=DECIMAL},
      pre_pay_time = #{record.prePayTime,jdbcType=INTEGER},
      pay_time = #{record.payTime,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      pay_state = #{record.payState,jdbcType=SMALLINT},
      pay_user = #{record.payUser,jdbcType=VARCHAR},
      pay_user_commission = #{record.payUserCommission,jdbcType=DECIMAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="entity.query.entites.Orderlist" >
    update orderlist
    <set >
      <if test="creatTime != null" >
        creat_time = #{creatTime,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="md5key != null" >
        md5key = #{md5key,jdbcType=VARCHAR},
      </if>
      <if test="roteId != null" >
        rote_id = #{roteId,jdbcType=VARCHAR},
      </if>
      <if test="payPlatform != null" >
        pay_platform = #{payPlatform,jdbcType=VARCHAR},
      </if>
      <if test="productSid != null" >
        product_sid = #{productSid,jdbcType=SMALLINT},
      </if>
      <if test="payDate != null" >
        pay_date = #{payDate,jdbcType=INTEGER},
      </if>
      <if test="payOrderId != null" >
        pay_order_id = #{payOrderId,jdbcType=VARCHAR},
      </if>
      <if test="payProductName != null" >
        pay_product_name = #{payProductName,jdbcType=VARCHAR},
      </if>
      <if test="payAmount != null" >
        pay_amount = #{payAmount,jdbcType=DECIMAL},
      </if>
      <if test="payNotifyUrl != null" >
        pay_notify_url = #{payNotifyUrl,jdbcType=VARCHAR},
      </if>
      <if test="payReturnUrl != null" >
        pay_return_url = #{payReturnUrl,jdbcType=VARCHAR},
      </if>
      <if test="payRemark != null" >
        pay_remark = #{payRemark,jdbcType=VARCHAR},
      </if>
      <if test="payStr != null" >
        pay_str = #{payStr,jdbcType=VARCHAR},
      </if>
      <if test="orderNum != null" >
        order_num = #{orderNum,jdbcType=VARCHAR},
      </if>
      <if test="successPayTime != null" >
        success_pay_time = #{successPayTime,jdbcType=INTEGER},
      </if>
      <if test="payTotal != null" >
        pay_total = #{payTotal,jdbcType=DECIMAL},
      </if>
      <if test="payPlatformName != null" >
        pay_platform_name = #{payPlatformName,jdbcType=VARCHAR},
      </if>
      <if test="payProduct != null" >
        pay_product = #{payProduct,jdbcType=VARCHAR},
      </if>
      <if test="payPlatformRote != null" >
        pay_platform_rote = #{payPlatformRote,jdbcType=DECIMAL},
      </if>
      <if test="payCompanyRote != null" >
        pay_company_rote = #{payCompanyRote,jdbcType=DECIMAL},
      </if>
      <if test="paySellRote != null" >
        pay_sell_rote = #{paySellRote,jdbcType=DECIMAL},
      </if>
      <if test="payPlatformFee != null" >
        pay_platform_fee = #{payPlatformFee,jdbcType=DECIMAL},
      </if>
      <if test="payCompanyFee != null" >
        pay_company_fee = #{payCompanyFee,jdbcType=DECIMAL},
      </if>
      <if test="paySellFee != null" >
        pay_sell_fee = #{paySellFee,jdbcType=DECIMAL},
      </if>
      <if test="payToMember != null" >
        pay_to_member = #{payToMember,jdbcType=DECIMAL},
      </if>
      <if test="payToBoss != null" >
        pay_to_boss = #{payToBoss,jdbcType=DECIMAL},
      </if>
      <if test="profit != null" >
        profit = #{profit,jdbcType=DECIMAL},
      </if>
      <if test="prePayTime != null" >
        pre_pay_time = #{prePayTime,jdbcType=INTEGER},
      </if>
      <if test="payTime != null" >
        pay_time = #{payTime,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="payState != null" >
        pay_state = #{payState,jdbcType=SMALLINT},
      </if>
      <if test="payUser != null" >
        pay_user = #{payUser,jdbcType=VARCHAR},
      </if>
      <if test="payUserCommission != null" >
        pay_user_commission = #{payUserCommission,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="entity.query.entites.Orderlist" >
    update orderlist
    set creat_time = #{creatTime,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=VARCHAR},
      md5key = #{md5key,jdbcType=VARCHAR},
      rote_id = #{roteId,jdbcType=VARCHAR},
      pay_platform = #{payPlatform,jdbcType=VARCHAR},
      product_sid = #{productSid,jdbcType=SMALLINT},
      pay_date = #{payDate,jdbcType=INTEGER},
      pay_order_id = #{payOrderId,jdbcType=VARCHAR},
      pay_product_name = #{payProductName,jdbcType=VARCHAR},
      pay_amount = #{payAmount,jdbcType=DECIMAL},
      pay_notify_url = #{payNotifyUrl,jdbcType=VARCHAR},
      pay_return_url = #{payReturnUrl,jdbcType=VARCHAR},
      pay_remark = #{payRemark,jdbcType=VARCHAR},
      pay_str = #{payStr,jdbcType=VARCHAR},
      order_num = #{orderNum,jdbcType=VARCHAR},
      success_pay_time = #{successPayTime,jdbcType=INTEGER},
      pay_total = #{payTotal,jdbcType=DECIMAL},
      pay_platform_name = #{payPlatformName,jdbcType=VARCHAR},
      pay_product = #{payProduct,jdbcType=VARCHAR},
      pay_platform_rote = #{payPlatformRote,jdbcType=DECIMAL},
      pay_company_rote = #{payCompanyRote,jdbcType=DECIMAL},
      pay_sell_rote = #{paySellRote,jdbcType=DECIMAL},
      pay_platform_fee = #{payPlatformFee,jdbcType=DECIMAL},
      pay_company_fee = #{payCompanyFee,jdbcType=DECIMAL},
      pay_sell_fee = #{paySellFee,jdbcType=DECIMAL},
      pay_to_member = #{payToMember,jdbcType=DECIMAL},
      pay_to_boss = #{payToBoss,jdbcType=DECIMAL},
      profit = #{profit,jdbcType=DECIMAL},
      pre_pay_time = #{prePayTime,jdbcType=INTEGER},
      pay_time = #{payTime,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      pay_state = #{payState,jdbcType=SMALLINT},
      pay_user = #{payUser,jdbcType=VARCHAR},
      pay_user_commission = #{payUserCommission,jdbcType=DECIMAL}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>