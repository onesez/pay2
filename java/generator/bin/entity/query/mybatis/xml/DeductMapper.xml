<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="entity.query.mybatis.map.DeductMapper" >
  <resultMap id="BaseResultMap" type="entity.query.entites.Deduct" >
    <id column="id" property="id" jdbcType="SMALLINT" />
    <result column="addtime" property="addtime" jdbcType="INTEGER" />
    <result column="amount" property="amount" jdbcType="VARCHAR" />
    <result column="payment_name" property="paymentName" jdbcType="VARCHAR" />
    <result column="payment_mobile" property="paymentMobile" jdbcType="VARCHAR" />
    <result column="payment_id_card" property="paymentIdCard" jdbcType="VARCHAR" />
    <result column="bank" property="bank" jdbcType="VARCHAR" />
    <result column="bank_card_num" property="bankCardNum" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="action_time" property="actionTime" jdbcType="INTEGER" />
    <result column="close_state" property="closeState" jdbcType="VARCHAR" />
    <result column="close_amount" property="closeAmount" jdbcType="REAL" />
    <result column="pre_close_time" property="preCloseTime" jdbcType="INTEGER" />
    <result column="close_time" property="closeTime" jdbcType="INTEGER" />
    <result column="deductor_id" property="deductorId" jdbcType="SMALLINT" />
    <result column="deductor_name" property="deductorName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, addtime, amount, payment_name, payment_mobile, payment_id_card, bank, bank_card_num, 
    status, description, action_time, close_state, close_amount, pre_close_time, close_time, 
    deductor_id, deductor_name
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="entity.query.entites.DeductExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from deduct
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Short" >
    select 
    <include refid="Base_Column_List" />
    from deduct
    where id = #{id,jdbcType=SMALLINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Short" >
    delete from deduct
    where id = #{id,jdbcType=SMALLINT}
  </delete>
  <delete id="deleteByExample" parameterType="entity.query.entites.DeductExample" >
    delete from deduct
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="entity.query.entites.Deduct" >
    insert into deduct (id, addtime, amount, 
      payment_name, payment_mobile, payment_id_card, 
      bank, bank_card_num, status, 
      description, action_time, close_state, 
      close_amount, pre_close_time, close_time, 
      deductor_id, deductor_name)
    values (#{id,jdbcType=SMALLINT}, #{addtime,jdbcType=INTEGER}, #{amount,jdbcType=VARCHAR}, 
      #{paymentName,jdbcType=VARCHAR}, #{paymentMobile,jdbcType=VARCHAR}, #{paymentIdCard,jdbcType=VARCHAR}, 
      #{bank,jdbcType=VARCHAR}, #{bankCardNum,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{actionTime,jdbcType=INTEGER}, #{closeState,jdbcType=VARCHAR}, 
      #{closeAmount,jdbcType=REAL}, #{preCloseTime,jdbcType=INTEGER}, #{closeTime,jdbcType=INTEGER}, 
      #{deductorId,jdbcType=SMALLINT}, #{deductorName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="entity.query.entites.Deduct" >
    insert into deduct
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="addtime != null" >
        addtime,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="paymentName != null" >
        payment_name,
      </if>
      <if test="paymentMobile != null" >
        payment_mobile,
      </if>
      <if test="paymentIdCard != null" >
        payment_id_card,
      </if>
      <if test="bank != null" >
        bank,
      </if>
      <if test="bankCardNum != null" >
        bank_card_num,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="actionTime != null" >
        action_time,
      </if>
      <if test="closeState != null" >
        close_state,
      </if>
      <if test="closeAmount != null" >
        close_amount,
      </if>
      <if test="preCloseTime != null" >
        pre_close_time,
      </if>
      <if test="closeTime != null" >
        close_time,
      </if>
      <if test="deductorId != null" >
        deductor_id,
      </if>
      <if test="deductorName != null" >
        deductor_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=SMALLINT},
      </if>
      <if test="addtime != null" >
        #{addtime,jdbcType=INTEGER},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=VARCHAR},
      </if>
      <if test="paymentName != null" >
        #{paymentName,jdbcType=VARCHAR},
      </if>
      <if test="paymentMobile != null" >
        #{paymentMobile,jdbcType=VARCHAR},
      </if>
      <if test="paymentIdCard != null" >
        #{paymentIdCard,jdbcType=VARCHAR},
      </if>
      <if test="bank != null" >
        #{bank,jdbcType=VARCHAR},
      </if>
      <if test="bankCardNum != null" >
        #{bankCardNum,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="actionTime != null" >
        #{actionTime,jdbcType=INTEGER},
      </if>
      <if test="closeState != null" >
        #{closeState,jdbcType=VARCHAR},
      </if>
      <if test="closeAmount != null" >
        #{closeAmount,jdbcType=REAL},
      </if>
      <if test="preCloseTime != null" >
        #{preCloseTime,jdbcType=INTEGER},
      </if>
      <if test="closeTime != null" >
        #{closeTime,jdbcType=INTEGER},
      </if>
      <if test="deductorId != null" >
        #{deductorId,jdbcType=SMALLINT},
      </if>
      <if test="deductorName != null" >
        #{deductorName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="entity.query.entites.DeductExample" resultType="java.lang.Integer" >
    select count(*) from deduct
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update deduct
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=SMALLINT},
      </if>
      <if test="record.addtime != null" >
        addtime = #{record.addtime,jdbcType=INTEGER},
      </if>
      <if test="record.amount != null" >
        amount = #{record.amount,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentName != null" >
        payment_name = #{record.paymentName,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentMobile != null" >
        payment_mobile = #{record.paymentMobile,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentIdCard != null" >
        payment_id_card = #{record.paymentIdCard,jdbcType=VARCHAR},
      </if>
      <if test="record.bank != null" >
        bank = #{record.bank,jdbcType=VARCHAR},
      </if>
      <if test="record.bankCardNum != null" >
        bank_card_num = #{record.bankCardNum,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.actionTime != null" >
        action_time = #{record.actionTime,jdbcType=INTEGER},
      </if>
      <if test="record.closeState != null" >
        close_state = #{record.closeState,jdbcType=VARCHAR},
      </if>
      <if test="record.closeAmount != null" >
        close_amount = #{record.closeAmount,jdbcType=REAL},
      </if>
      <if test="record.preCloseTime != null" >
        pre_close_time = #{record.preCloseTime,jdbcType=INTEGER},
      </if>
      <if test="record.closeTime != null" >
        close_time = #{record.closeTime,jdbcType=INTEGER},
      </if>
      <if test="record.deductorId != null" >
        deductor_id = #{record.deductorId,jdbcType=SMALLINT},
      </if>
      <if test="record.deductorName != null" >
        deductor_name = #{record.deductorName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update deduct
    set id = #{record.id,jdbcType=SMALLINT},
      addtime = #{record.addtime,jdbcType=INTEGER},
      amount = #{record.amount,jdbcType=VARCHAR},
      payment_name = #{record.paymentName,jdbcType=VARCHAR},
      payment_mobile = #{record.paymentMobile,jdbcType=VARCHAR},
      payment_id_card = #{record.paymentIdCard,jdbcType=VARCHAR},
      bank = #{record.bank,jdbcType=VARCHAR},
      bank_card_num = #{record.bankCardNum,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      action_time = #{record.actionTime,jdbcType=INTEGER},
      close_state = #{record.closeState,jdbcType=VARCHAR},
      close_amount = #{record.closeAmount,jdbcType=REAL},
      pre_close_time = #{record.preCloseTime,jdbcType=INTEGER},
      close_time = #{record.closeTime,jdbcType=INTEGER},
      deductor_id = #{record.deductorId,jdbcType=SMALLINT},
      deductor_name = #{record.deductorName,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="entity.query.entites.Deduct" >
    update deduct
    <set >
      <if test="addtime != null" >
        addtime = #{addtime,jdbcType=INTEGER},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=VARCHAR},
      </if>
      <if test="paymentName != null" >
        payment_name = #{paymentName,jdbcType=VARCHAR},
      </if>
      <if test="paymentMobile != null" >
        payment_mobile = #{paymentMobile,jdbcType=VARCHAR},
      </if>
      <if test="paymentIdCard != null" >
        payment_id_card = #{paymentIdCard,jdbcType=VARCHAR},
      </if>
      <if test="bank != null" >
        bank = #{bank,jdbcType=VARCHAR},
      </if>
      <if test="bankCardNum != null" >
        bank_card_num = #{bankCardNum,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="actionTime != null" >
        action_time = #{actionTime,jdbcType=INTEGER},
      </if>
      <if test="closeState != null" >
        close_state = #{closeState,jdbcType=VARCHAR},
      </if>
      <if test="closeAmount != null" >
        close_amount = #{closeAmount,jdbcType=REAL},
      </if>
      <if test="preCloseTime != null" >
        pre_close_time = #{preCloseTime,jdbcType=INTEGER},
      </if>
      <if test="closeTime != null" >
        close_time = #{closeTime,jdbcType=INTEGER},
      </if>
      <if test="deductorId != null" >
        deductor_id = #{deductorId,jdbcType=SMALLINT},
      </if>
      <if test="deductorName != null" >
        deductor_name = #{deductorName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=SMALLINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="entity.query.entites.Deduct" >
    update deduct
    set addtime = #{addtime,jdbcType=INTEGER},
      amount = #{amount,jdbcType=VARCHAR},
      payment_name = #{paymentName,jdbcType=VARCHAR},
      payment_mobile = #{paymentMobile,jdbcType=VARCHAR},
      payment_id_card = #{paymentIdCard,jdbcType=VARCHAR},
      bank = #{bank,jdbcType=VARCHAR},
      bank_card_num = #{bankCardNum,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      action_time = #{actionTime,jdbcType=INTEGER},
      close_state = #{closeState,jdbcType=VARCHAR},
      close_amount = #{closeAmount,jdbcType=REAL},
      pre_close_time = #{preCloseTime,jdbcType=INTEGER},
      close_time = #{closeTime,jdbcType=INTEGER},
      deductor_id = #{deductorId,jdbcType=SMALLINT},
      deductor_name = #{deductorName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=SMALLINT}
  </update>
</mapper>