<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="entity.query.mybatis.map.PlatformProfileMapper" >
  <resultMap id="BaseResultMap" type="entity.query.entites.PlatformProfile" >
    <id column="id" property="id" jdbcType="SMALLINT" />
    <result column="platform_id" property="platformId" jdbcType="SMALLINT" />
    <result column="product_id" property="productId" jdbcType="SMALLINT" />
    <result column="rote" property="rote" jdbcType="REAL" />
    <result column="sell_rote" property="sellRote" jdbcType="REAL" />
    <result column="is_run" property="isRun" jdbcType="SMALLINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, platform_id, product_id, rote, sell_rote, is_run
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="entity.query.entites.PlatformProfileExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from platform_profile
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Short" >
    select 
    <include refid="Base_Column_List" />
    from platform_profile
    where id = #{id,jdbcType=SMALLINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Short" >
    delete from platform_profile
    where id = #{id,jdbcType=SMALLINT}
  </delete>
  <delete id="deleteByExample" parameterType="entity.query.entites.PlatformProfileExample" >
    delete from platform_profile
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="entity.query.entites.PlatformProfile" >
    insert into platform_profile (id, platform_id, product_id, 
      rote, sell_rote, is_run)
    values (#{id,jdbcType=SMALLINT}, #{platformId,jdbcType=SMALLINT}, #{productId,jdbcType=SMALLINT}, 
      #{rote,jdbcType=REAL}, #{sellRote,jdbcType=REAL}, #{isRun,jdbcType=SMALLINT})
  </insert>
  <insert id="insertSelective" parameterType="entity.query.entites.PlatformProfile" >
    insert into platform_profile
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="platformId != null" >
        platform_id,
      </if>
      <if test="productId != null" >
        product_id,
      </if>
      <if test="rote != null" >
        rote,
      </if>
      <if test="sellRote != null" >
        sell_rote,
      </if>
      <if test="isRun != null" >
        is_run,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=SMALLINT},
      </if>
      <if test="platformId != null" >
        #{platformId,jdbcType=SMALLINT},
      </if>
      <if test="productId != null" >
        #{productId,jdbcType=SMALLINT},
      </if>
      <if test="rote != null" >
        #{rote,jdbcType=REAL},
      </if>
      <if test="sellRote != null" >
        #{sellRote,jdbcType=REAL},
      </if>
      <if test="isRun != null" >
        #{isRun,jdbcType=SMALLINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="entity.query.entites.PlatformProfileExample" resultType="java.lang.Integer" >
    select count(*) from platform_profile
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update platform_profile
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=SMALLINT},
      </if>
      <if test="record.platformId != null" >
        platform_id = #{record.platformId,jdbcType=SMALLINT},
      </if>
      <if test="record.productId != null" >
        product_id = #{record.productId,jdbcType=SMALLINT},
      </if>
      <if test="record.rote != null" >
        rote = #{record.rote,jdbcType=REAL},
      </if>
      <if test="record.sellRote != null" >
        sell_rote = #{record.sellRote,jdbcType=REAL},
      </if>
      <if test="record.isRun != null" >
        is_run = #{record.isRun,jdbcType=SMALLINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update platform_profile
    set id = #{record.id,jdbcType=SMALLINT},
      platform_id = #{record.platformId,jdbcType=SMALLINT},
      product_id = #{record.productId,jdbcType=SMALLINT},
      rote = #{record.rote,jdbcType=REAL},
      sell_rote = #{record.sellRote,jdbcType=REAL},
      is_run = #{record.isRun,jdbcType=SMALLINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="entity.query.entites.PlatformProfile" >
    update platform_profile
    <set >
      <if test="platformId != null" >
        platform_id = #{platformId,jdbcType=SMALLINT},
      </if>
      <if test="productId != null" >
        product_id = #{productId,jdbcType=SMALLINT},
      </if>
      <if test="rote != null" >
        rote = #{rote,jdbcType=REAL},
      </if>
      <if test="sellRote != null" >
        sell_rote = #{sellRote,jdbcType=REAL},
      </if>
      <if test="isRun != null" >
        is_run = #{isRun,jdbcType=SMALLINT},
      </if>
    </set>
    where id = #{id,jdbcType=SMALLINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="entity.query.entites.PlatformProfile" >
    update platform_profile
    set platform_id = #{platformId,jdbcType=SMALLINT},
      product_id = #{productId,jdbcType=SMALLINT},
      rote = #{rote,jdbcType=REAL},
      sell_rote = #{sellRote,jdbcType=REAL},
      is_run = #{isRun,jdbcType=SMALLINT}
    where id = #{id,jdbcType=SMALLINT}
  </update>
</mapper>