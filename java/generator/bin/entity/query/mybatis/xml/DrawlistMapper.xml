<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="entity.query.mybatis.map.DrawlistMapper" >
  <resultMap id="BaseResultMap" type="entity.query.entites.Drawlist" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="SMALLINT" />
    <result column="addtime" property="addtime" jdbcType="INTEGER" />
    <result column="order_num" property="orderNum" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="bank_account" property="bankAccount" jdbcType="VARCHAR" />
    <result column="bank" property="bank" jdbcType="VARCHAR" />
    <result column="bank_card_num" property="bankCardNum" jdbcType="VARCHAR" />
    <result column="amount" property="amount" jdbcType="DECIMAL" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="reason" property="reason" jdbcType="VARCHAR" />
    <result column="pay_time" property="payTime" jdbcType="INTEGER" />
    <result column="batch_order_num" property="batchOrderNum" jdbcType="VARCHAR" />
    <result column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="platform_order_num" property="platformOrderNum" jdbcType="VARCHAR" />
    <result column="platform" property="platform" jdbcType="VARCHAR" />
    <result column="success_pay_time" property="successPayTime" jdbcType="INTEGER" />
    <result column="success_state" property="successState" jdbcType="VARCHAR" />
    <result column="success_result" property="successResult" jdbcType="VARCHAR" />
    <result column="fail_state" property="failState" jdbcType="SMALLINT" />
    <result column="fail_amount" property="failAmount" jdbcType="DECIMAL" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, addtime, order_num, user_name, mobile, bank_account, bank, bank_card_num, 
    amount, status, reason, pay_time, batch_order_num, order_id, platform_order_num, 
    platform, success_pay_time, success_state, success_result, fail_state, fail_amount, 
    remark
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="entity.query.entites.DrawlistExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from drawlist
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from drawlist
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from drawlist
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="entity.query.entites.DrawlistExample" >
    delete from drawlist
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="entity.query.entites.Drawlist" >
    insert into drawlist (id, user_id, addtime, 
      order_num, user_name, mobile, 
      bank_account, bank, bank_card_num, 
      amount, status, reason, 
      pay_time, batch_order_num, order_id, 
      platform_order_num, platform, success_pay_time, 
      success_state, success_result, fail_state, 
      fail_amount, remark)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=SMALLINT}, #{addtime,jdbcType=INTEGER}, 
      #{orderNum,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, 
      #{bankAccount,jdbcType=VARCHAR}, #{bank,jdbcType=VARCHAR}, #{bankCardNum,jdbcType=VARCHAR}, 
      #{amount,jdbcType=DECIMAL}, #{status,jdbcType=VARCHAR}, #{reason,jdbcType=VARCHAR}, 
      #{payTime,jdbcType=INTEGER}, #{batchOrderNum,jdbcType=VARCHAR}, #{orderId,jdbcType=INTEGER}, 
      #{platformOrderNum,jdbcType=VARCHAR}, #{platform,jdbcType=VARCHAR}, #{successPayTime,jdbcType=INTEGER}, 
      #{successState,jdbcType=VARCHAR}, #{successResult,jdbcType=VARCHAR}, #{failState,jdbcType=SMALLINT}, 
      #{failAmount,jdbcType=DECIMAL}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="entity.query.entites.Drawlist" >
    insert into drawlist
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="addtime != null" >
        addtime,
      </if>
      <if test="orderNum != null" >
        order_num,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="bankAccount != null" >
        bank_account,
      </if>
      <if test="bank != null" >
        bank,
      </if>
      <if test="bankCardNum != null" >
        bank_card_num,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="reason != null" >
        reason,
      </if>
      <if test="payTime != null" >
        pay_time,
      </if>
      <if test="batchOrderNum != null" >
        batch_order_num,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="platformOrderNum != null" >
        platform_order_num,
      </if>
      <if test="platform != null" >
        platform,
      </if>
      <if test="successPayTime != null" >
        success_pay_time,
      </if>
      <if test="successState != null" >
        success_state,
      </if>
      <if test="successResult != null" >
        success_result,
      </if>
      <if test="failState != null" >
        fail_state,
      </if>
      <if test="failAmount != null" >
        fail_amount,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=SMALLINT},
      </if>
      <if test="addtime != null" >
        #{addtime,jdbcType=INTEGER},
      </if>
      <if test="orderNum != null" >
        #{orderNum,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="bankAccount != null" >
        #{bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="bank != null" >
        #{bank,jdbcType=VARCHAR},
      </if>
      <if test="bankCardNum != null" >
        #{bankCardNum,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="reason != null" >
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="payTime != null" >
        #{payTime,jdbcType=INTEGER},
      </if>
      <if test="batchOrderNum != null" >
        #{batchOrderNum,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="platformOrderNum != null" >
        #{platformOrderNum,jdbcType=VARCHAR},
      </if>
      <if test="platform != null" >
        #{platform,jdbcType=VARCHAR},
      </if>
      <if test="successPayTime != null" >
        #{successPayTime,jdbcType=INTEGER},
      </if>
      <if test="successState != null" >
        #{successState,jdbcType=VARCHAR},
      </if>
      <if test="successResult != null" >
        #{successResult,jdbcType=VARCHAR},
      </if>
      <if test="failState != null" >
        #{failState,jdbcType=SMALLINT},
      </if>
      <if test="failAmount != null" >
        #{failAmount,jdbcType=DECIMAL},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="entity.query.entites.DrawlistExample" resultType="java.lang.Integer" >
    select count(*) from drawlist
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update drawlist
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=SMALLINT},
      </if>
      <if test="record.addtime != null" >
        addtime = #{record.addtime,jdbcType=INTEGER},
      </if>
      <if test="record.orderNum != null" >
        order_num = #{record.orderNum,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null" >
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null" >
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.bankAccount != null" >
        bank_account = #{record.bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.bank != null" >
        bank = #{record.bank,jdbcType=VARCHAR},
      </if>
      <if test="record.bankCardNum != null" >
        bank_card_num = #{record.bankCardNum,jdbcType=VARCHAR},
      </if>
      <if test="record.amount != null" >
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.reason != null" >
        reason = #{record.reason,jdbcType=VARCHAR},
      </if>
      <if test="record.payTime != null" >
        pay_time = #{record.payTime,jdbcType=INTEGER},
      </if>
      <if test="record.batchOrderNum != null" >
        batch_order_num = #{record.batchOrderNum,jdbcType=VARCHAR},
      </if>
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.platformOrderNum != null" >
        platform_order_num = #{record.platformOrderNum,jdbcType=VARCHAR},
      </if>
      <if test="record.platform != null" >
        platform = #{record.platform,jdbcType=VARCHAR},
      </if>
      <if test="record.successPayTime != null" >
        success_pay_time = #{record.successPayTime,jdbcType=INTEGER},
      </if>
      <if test="record.successState != null" >
        success_state = #{record.successState,jdbcType=VARCHAR},
      </if>
      <if test="record.successResult != null" >
        success_result = #{record.successResult,jdbcType=VARCHAR},
      </if>
      <if test="record.failState != null" >
        fail_state = #{record.failState,jdbcType=SMALLINT},
      </if>
      <if test="record.failAmount != null" >
        fail_amount = #{record.failAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update drawlist
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=SMALLINT},
      addtime = #{record.addtime,jdbcType=INTEGER},
      order_num = #{record.orderNum,jdbcType=VARCHAR},
      user_name = #{record.userName,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      bank_account = #{record.bankAccount,jdbcType=VARCHAR},
      bank = #{record.bank,jdbcType=VARCHAR},
      bank_card_num = #{record.bankCardNum,jdbcType=VARCHAR},
      amount = #{record.amount,jdbcType=DECIMAL},
      status = #{record.status,jdbcType=VARCHAR},
      reason = #{record.reason,jdbcType=VARCHAR},
      pay_time = #{record.payTime,jdbcType=INTEGER},
      batch_order_num = #{record.batchOrderNum,jdbcType=VARCHAR},
      order_id = #{record.orderId,jdbcType=INTEGER},
      platform_order_num = #{record.platformOrderNum,jdbcType=VARCHAR},
      platform = #{record.platform,jdbcType=VARCHAR},
      success_pay_time = #{record.successPayTime,jdbcType=INTEGER},
      success_state = #{record.successState,jdbcType=VARCHAR},
      success_result = #{record.successResult,jdbcType=VARCHAR},
      fail_state = #{record.failState,jdbcType=SMALLINT},
      fail_amount = #{record.failAmount,jdbcType=DECIMAL},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="entity.query.entites.Drawlist" >
    update drawlist
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=SMALLINT},
      </if>
      <if test="addtime != null" >
        addtime = #{addtime,jdbcType=INTEGER},
      </if>
      <if test="orderNum != null" >
        order_num = #{orderNum,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="bankAccount != null" >
        bank_account = #{bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="bank != null" >
        bank = #{bank,jdbcType=VARCHAR},
      </if>
      <if test="bankCardNum != null" >
        bank_card_num = #{bankCardNum,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="reason != null" >
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="payTime != null" >
        pay_time = #{payTime,jdbcType=INTEGER},
      </if>
      <if test="batchOrderNum != null" >
        batch_order_num = #{batchOrderNum,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="platformOrderNum != null" >
        platform_order_num = #{platformOrderNum,jdbcType=VARCHAR},
      </if>
      <if test="platform != null" >
        platform = #{platform,jdbcType=VARCHAR},
      </if>
      <if test="successPayTime != null" >
        success_pay_time = #{successPayTime,jdbcType=INTEGER},
      </if>
      <if test="successState != null" >
        success_state = #{successState,jdbcType=VARCHAR},
      </if>
      <if test="successResult != null" >
        success_result = #{successResult,jdbcType=VARCHAR},
      </if>
      <if test="failState != null" >
        fail_state = #{failState,jdbcType=SMALLINT},
      </if>
      <if test="failAmount != null" >
        fail_amount = #{failAmount,jdbcType=DECIMAL},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="entity.query.entites.Drawlist" >
    update drawlist
    set user_id = #{userId,jdbcType=SMALLINT},
      addtime = #{addtime,jdbcType=INTEGER},
      order_num = #{orderNum,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      bank_account = #{bankAccount,jdbcType=VARCHAR},
      bank = #{bank,jdbcType=VARCHAR},
      bank_card_num = #{bankCardNum,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=DECIMAL},
      status = #{status,jdbcType=VARCHAR},
      reason = #{reason,jdbcType=VARCHAR},
      pay_time = #{payTime,jdbcType=INTEGER},
      batch_order_num = #{batchOrderNum,jdbcType=VARCHAR},
      order_id = #{orderId,jdbcType=INTEGER},
      platform_order_num = #{platformOrderNum,jdbcType=VARCHAR},
      platform = #{platform,jdbcType=VARCHAR},
      success_pay_time = #{successPayTime,jdbcType=INTEGER},
      success_state = #{successState,jdbcType=VARCHAR},
      success_result = #{successResult,jdbcType=VARCHAR},
      fail_state = #{failState,jdbcType=SMALLINT},
      fail_amount = #{failAmount,jdbcType=DECIMAL},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>